{
    "title": "sevDesk Contact API",
    "description": "\r\n# General information\r\nWelcome to our Contact API!<br>\r\nYou can use it to manage contacts in your sevDesk account.\r\n\r\n# Cross-Origin Resource Sharing\r\nThis API features Cross-Origin Resource Sharing (CORS).<br>\r\nIt enables cross-domain communication from the browser.<br>\r\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\r\n\r\n# Embedding resources\r\nWhen retrieving resources by using this API, you might encounter nested resources in the resources you requested.<br>\r\nFor example, an invoice always contains a contact, of which you can see the ID and the object name.<br>\r\nThis API gives you the possibility to embed these resources completely into the resources you originally requested.<br>\r\nTaking our invoice example, this would mean, that you would not only see the ID and object name of a contact, but rather the complete contact resource.\r\n\r\nTo embed resources, all you need to do is to add the query parameter 'embed' to your GET request.<br>\r\nAs values, you can provide the name of the nested resource.<br>\r\nMultiple nested resources are also possible by providing multiple names, separated by a comma.\r\n",
    "docsUrl": "https://5677.extern.sevdesk.dev/apiOverview/index.html#/",
    "url": "https://raw.githubusercontent.com/openintegrationhub/sevdesk-contacts-component/main/lib/spec.json",
    "envVars": {},
    "credentials": {
        "fields": {
            "server": {
                "label": "Server",
                "viewClass": "SelectView",
                "model": [
                    "https://my.sevdesk.de/api/v1 - Our main application instance which most of our customers work with",
                    "https://my.pebesmart.ch/api/v1 - Our swiss application instance, hosted and maintained by smart seven AG",
                    "http://sevdesk.local/api/v1 - sevDesk internal local instance",
                    "--- Custom URL"
                ],
                "required": true
            },
            "otherServer": {
                "label": "Custom Server URL",
                "viewClass": "TextFieldView"
            },
            "auth_api_key": {
                "label": "Authorization (api_key)",
                "viewClass": "TextFieldView"
            }
        }
    },
    "triggers": {
        "lookup": {
            "main": "./lib/lookups/lookup.js",
            "title": "Function to run a lookup",
            "description": "Function to call an internal trigger or action"
        },
        "getNextCustomerNumber": {
            "main": "./lib/triggers/trigger.js",
            "title": "Get next free customer number",
            "description": "Retrieves the next available customer number. Avoids duplicates.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "callParams": {
                "pathName": "/Contact/Factory/getNextCustomerNumber",
                "method": "get"
            },
            "metadata": {
                "in": "./lib/schemas/getNextCustomerNumber.in.json",
                "out": "./lib/schemas/getNextCustomerNumber.out.json"
            }
        },
        "getContacts": {
            "main": "./lib/triggers/trigger.js",
            "title": "Retrieve contacts",
            "description": "There are a multitude of parameter which can be used to filter.<br>\r\n     A few of them are attached but\r\n     for a complete list please check out <a href='https://5677.extern.sevdesk.dev/apiOverview/index.html#/doc-contacts#filtering'>this</a> list",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "callParams": {
                "pathName": "/Contact",
                "method": "get"
            },
            "metadata": {
                "in": "./lib/schemas/getContacts.in.json",
                "out": "./lib/schemas/getContacts.out.json"
            }
        },
        "getCommunicationWays": {
            "main": "./lib/triggers/trigger.js",
            "title": "Retrieve communication ways",
            "description": "Returns all communication ways which have been added up until now. Filters can be added.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "callParams": {
                "pathName": "/CommunicationWay",
                "method": "get"
            },
            "metadata": {
                "in": "./lib/schemas/getCommunicationWays.in.json",
                "out": "./lib/schemas/getCommunicationWays.out.json"
            }
        },
        "contactGetCommunicationWays": {
            "main": "./lib/triggers/trigger.js",
            "title": "Get communication ways of contact",
            "description": "Returns all communication ways of a given contact.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "callParams": {
                "pathName": "/Contact/{contactId}/getCommunicationWays",
                "method": "get"
            },
            "metadata": {
                "in": "./lib/schemas/contactGetCommunicationWays.in.json",
                "out": "./lib/schemas/contactGetCommunicationWays.out.json"
            }
        },
        "contactCustomerNumberAvailabilityCheck": {
            "main": "./lib/triggers/trigger.js",
            "title": "Check if a customer number is available",
            "description": "Checks if a given customer number is available or already used.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "callParams": {
                "pathName": "/Contact/Mapper/checkCustomerNumberAvailability",
                "method": "get"
            },
            "metadata": {
                "in": "./lib/schemas/contactCustomerNumberAvailabilityCheck.in.json",
                "out": "./lib/schemas/contactCustomerNumberAvailabilityCheck.out.json"
            }
        }
    },
    "actions": {
        "getContactById": {
            "main": "./lib/actions/action.js",
            "title": "Find contact by ID",
            "description": "Returns a single contact",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "callParams": {
                "pathName": "/Contact/{contactId}",
                "method": "get"
            },
            "metadata": {
                "in": "./lib/schemas/getContactById.in.json",
                "out": "./lib/schemas/getContactById.out.json"
            }
        },
        "contactAddAddress": {
            "main": "./lib/actions/action.js",
            "title": "Add address to contact",
            "description": "Adds an address to a contact.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "callParams": {
                "pathName": "/Contact/{contactId}/addAddress",
                "method": "post",
                "requestContentType": "json"
            },
            "metadata": {
                "in": "./lib/schemas/contactAddAddress.in.json",
                "out": "./lib/schemas/contactAddAddress.out.json"
            }
        },
        "createContact": {
            "main": "./lib/actions/action.js",
            "title": "Create a new contact",
            "description": "Creates a new contact.<br>\r\n     For adding addresses and communication ways, you will need to use the ContactAddress and CommunicationWay endpoints.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "callParams": {
                "pathName": "/Contact",
                "method": "post",
                "requestContentType": "json"
            },
            "metadata": {
                "in": "./lib/schemas/createContact.in.json",
                "out": "./lib/schemas/createContact.out.json"
            }
        },
        "createContactAddress": {
            "main": "./lib/actions/action.js",
            "title": "Create a new contact address",
            "description": "Creates a new contact address.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "callParams": {
                "pathName": "/ContactAddress",
                "method": "post",
                "requestContentType": "json"
            },
            "metadata": {
                "in": "./lib/schemas/createContactAddress.in.json",
                "out": "./lib/schemas/createContactAddress.out.json"
            }
        },
        "contactAddPhone": {
            "main": "./lib/actions/action.js",
            "title": "Add phone number to contact",
            "description": "Adds a phone number to a contact.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "callParams": {
                "pathName": "/Contact/{contactId}/addPhone",
                "method": "post",
                "requestContentType": "json"
            },
            "metadata": {
                "in": "./lib/schemas/contactAddPhone.in.json",
                "out": "./lib/schemas/contactAddPhone.out.json"
            }
        },
        "createAccountingContact": {
            "main": "./lib/actions/action.js",
            "title": "Create a new accounting contact",
            "description": "Creates a new accounting contact.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "callParams": {
                "pathName": "/AccountingContact",
                "method": "post",
                "requestContentType": "json"
            },
            "metadata": {
                "in": "./lib/schemas/createAccountingContact.in.json",
                "out": "./lib/schemas/createAccountingContact.out.json"
            }
        },
        "deleteCommunicationWay": {
            "main": "./lib/actions/action.js",
            "title": "Deletes a communication way",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "callParams": {
                "pathName": "/CommunicationWay/{communicationWayId}/delete",
                "method": "delete"
            },
            "metadata": {
                "in": "./lib/schemas/deleteCommunicationWay.in.json",
                "out": "./lib/schemas/deleteCommunicationWay.out.json"
            }
        },
        "updateContact": {
            "main": "./lib/actions/action.js",
            "title": "Update an existing contact",
            "description": "Update a contact",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "callParams": {
                "pathName": "/Contact/{contactId}",
                "method": "put",
                "requestContentType": "json"
            },
            "metadata": {
                "in": "./lib/schemas/updateContact.in.json",
                "out": "./lib/schemas/updateContact.out.json"
            }
        },
        "createCommunicationWay": {
            "main": "./lib/actions/action.js",
            "title": "Create a new contact communication way",
            "description": "Creates a new contact communication way.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "callParams": {
                "pathName": "/CommunicationWay",
                "method": "post",
                "requestContentType": "json"
            },
            "metadata": {
                "in": "./lib/schemas/createCommunicationWay.in.json",
                "out": "./lib/schemas/createCommunicationWay.out.json"
            }
        },
        "contactAddEmail": {
            "main": "./lib/actions/action.js",
            "title": "Add email to contact",
            "description": "Adds an email to a contact.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "callParams": {
                "pathName": "/Contact/{contactId}/addEmail",
                "method": "post",
                "requestContentType": "json"
            },
            "metadata": {
                "in": "./lib/schemas/contactAddEmail.in.json",
                "out": "./lib/schemas/contactAddEmail.out.json"
            }
        }
    }
}